stages:
  - build
  - deploy

build-docker:
  stage: build
  when: manual

  only:
    - master
  # https://www.cloudsigma.com/deploying-laravel-nginx-and-mysql-with-docker-compose/
  # https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose-ru
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    - docker build
      --tag $CI_REGISTRY_IMAGE:nginx
      --build-arg BUILDKIT_INLINE_CACHE=1
      .

    - docker build
      --file php-fpm.Dockerfile
      --tag $CI_REGISTRY_IMAGE:fpm
      --build-arg BUILDKIT_INLINE_CACHE=1
      .

    - docker push $CI_REGISTRY_IMAGE:master
    - docker push $CI_REGISTRY_IMAGE:fpm

deploy-app:
  stage: deploy
  only:
    - colleagues

  needs:
    - build-docker

  # tags:
  #   - mycic

  variables:
   RANCHER_ENVIRONMENT: default

  script:
    # - rancher stop mycic-prod
    # - rancher volume rm mycic_production_code
    - rancher up -d
      --stack MyCIC-Prod
      --file .deploy/docker-compose.yml
      --rancher-file .deploy/rancher-compose.yml

    - rancher up -d
      --file .deploy/docker-compose.yml
      --rancher-file .deploy/rancher-compose.yml
      --force-upgrade
      --pull
      --stack MyCIC-Prod
      --confirm-upgrade php-app nginx

  after_script: # https://github.com/rancher/rancher/issues/7971#issuecomment-286856228
    - script --return --quiet --command "rancher exec -it mycic-prod-php-app-1 composer install" /dev/null
    - script --return --quiet --command "rancher exec -it mycic-prod-php-app-1 php artisan migrate --force" /dev/null
    - script --return --quiet --command "rancher exec -it mycic-prod-php-app-1 cp /release/* /app/*" /dev/null
    # - rancher exec -it mycic-prod-php-app-1 composer install
    # - rancher exec -it mycic-prod-php-app-1 a migrate --force

# sonarqube-check:
#   when: manual
#   stage: sonarqube
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   tags:
#     - docker
#   variables:
#     # SONAR_TOKEN: "4e91a6da8f68c5941ccaa91118b18d3820b921b0"
#     # SONAR_HOST_URL: "http://192.168.30.30:8888"
#     GIT_DEPTH: 0
#   script:
#     - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG -Dsonar.sources=. -Dsonar.exclusions=vendor/**,public/**,node_modules/**,storage/**,resources/js/**,_ide_helper.php,_ide_helper_models.php
#   allow_failure: true
#   only:
#     - merge_requests
#     - colleagues

###
