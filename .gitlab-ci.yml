stages:
  - build
  - deploy

build-docker:
  stage: build

  only:
    - dockerize
  # https://www.cloudsigma.com/deploying-laravel-nginx-and-mysql-with-docker-compose/
  # https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose-ru
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    - docker build
      --tag $CI_REGISTRY_IMAGE:latest
      --build-arg BUILDKIT_INLINE_CACHE=1
      .

    - docker push $CI_REGISTRY_IMAGE:latest

deploy-app:
  stage: deploy
  when: manual
  only:
    - dockerize

  needs:
    - build-docker

  variables:
   RANCHER_ENVIRONMENT: default

  script:
    - rancher up -d
      --stack Mycent-Test
      --file .deploy/docker-compose.yml
      --rancher-file .deploy/rancher-compose.yml

    - rancher up -d
      --file .deploy/docker-compose.yml
      --rancher-file .deploy/rancher-compose.yml
      --force-upgrade
      --pull
      --stack Mycent-Test
      --confirm-upgrade server nginx

  after_script: [] # https://github.com/rancher/rancher/issues/7971#issuecomment-286856228
    # - curl http://mycent.kz/api/command?command=migrate&key=123456789
    # - script --return --quiet --command "rancher exec -it mycent-prod-php-app-1 composer install" /dev/null
    # - script --return --quiet --command "rancher exec -it mycent-prod-php-app-1 php artisan migrate --force" /dev/null
    # - script --return --quiet --command "rancher exec -it mycent-prod-php-app-1 cp /release/* /app/*" /dev/null
    # - rancher exec -it mycic-prod-php-app-1 composer install
    # - rancher exec -it mycic-prod-php-app-1 a migrate --force
